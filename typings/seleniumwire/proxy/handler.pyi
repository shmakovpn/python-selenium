"""
This type stub file was generated by pyright.
"""

import logging
from .proxy2 import ProxyRequestHandler

log = logging.getLogger(__name__)
class CaptureMixin:
    """Mixin that handles the capturing of requests and responses."""
    def capture_request(self, request):
        """Capture a request and save the unique id associated with the
        captured request in the id field.

        If any modification rules are set, the request will be modified
        before capture.

        Args:
            request: The request to capture.
        Returns: The captured request id.
        """
        ...
    
    def capture_response(self, request_id, url, response):
        """Capture a response and its body that relate to a previous request.

        Args:
            request_id: The id of the original request.
            url: The request url.
            response: The response to capture.
        """
        ...
    
    def in_scope(self, scopes, url):
        ...
    


class CaptureRequestHandler(CaptureMixin, ProxyRequestHandler):
    """Specialisation of ProxyRequestHandler that captures requests and responses
    that pass through the proxy server.
    """
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    def handle_request(self, req, req_body):
        """Captures a request and its body.

        Args:
            req: The request (an instance of CaptureRequestHandler).
            req_body: The binary request body.
        """
        ...
    
    def handle_response(self, req, req_body, res, res_body):
        """Captures a response and its body that relate to a previous request.

        Args:
            req: The original request (an instance of CaptureRequestHandler).
            req_body: The body of the original request.
            res: The response (a http.client.HTTPResponse instance) that corresponds to the request.
            res_body: The binary response body.
        """
        ...
    
    @property
    def certdir(self):
        """Overrides the certdir attribute to retrieve the storage-specific certificate directory."""
        ...
    
    def log_request(self, code=..., size=...):
        ...
    
    def log_message(self, format_, *args):
        ...
    
    def log_error(self, format_, *args):
        ...
    


def create_custom_capture_request_handler(custom_response_handler):
    """Creates a custom class derived from CaptureRequestHandler with the
    handle_response method overwritten to return
    custom_response_handler after running super().handle_response

    DEPRECATED. Use response_interceptor.
    """
    class CustomCaptureRequestHandler(CaptureRequestHandler):
        ...
    
    


"""
This type stub file was generated by pyright.
"""

import logging
from seleniumwire.proxy.handler import CaptureMixin

"""This module manages the integraton with mitmproxy."""
logger = logging.getLogger(__name__)
DEFAULT_CONFDIR = '~/.mitmproxy'
DEFAULT_UPSTREAM_CERT = False
DEFAULT_STREAM_WEBSOCKETS = True
class MitmProxyRequestHandler(CaptureMixin):
    """Mitmproxy add-on which provides request modification and capture."""
    def __init__(self, server) -> None:
        ...
    
    def requestheaders(self, flow):
        ...
    
    def request(self, flow):
        ...
    
    def response(self, flow):
        ...
    
    def responseheaders(self, flow):
        ...
    


class MitmProxy:
    """Run and manage a mitmproxy server instance."""
    def __init__(self, host, port, options) -> None:
        ...
    
    def serve_forever(self):
        """Run the server."""
        ...
    
    def address(self):
        """Get a tuple of the address and port the mitmproxy server
        is listening on.
        """
        ...
    
    def shutdown(self):
        """Shutdown the server and perform any cleanup."""
        ...
    


class SendToLogger:
    def log(self, entry):
        """Send a mitmproxy log message through our own logger."""
        ...
    



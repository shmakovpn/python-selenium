"""
This type stub file was generated by pyright.
"""

class ElementScrollBehavior(object):
    TOP = ...
    BOTTOM = ...


class Options(object):
    KEY = ...
    SWITCHES = ...
    BROWSER_ATTACH_TIMEOUT = ...
    ELEMENT_SCROLL_BEHAVIOR = ...
    ENSURE_CLEAN_SESSION = ...
    FILE_UPLOAD_DIALOG_TIMEOUT = ...
    FORCE_CREATE_PROCESS_API = ...
    FORCE_SHELL_WINDOWS_API = ...
    FULL_PAGE_SCREENSHOT = ...
    IGNORE_PROTECTED_MODE_SETTINGS = ...
    IGNORE_ZOOM_LEVEL = ...
    INITIAL_BROWSER_URL = ...
    NATIVE_EVENTS = ...
    PERSISTENT_HOVER = ...
    REQUIRE_WINDOW_FOCUS = ...
    USE_PER_PROCESS_PROXY = ...
    VALIDATE_COOKIE_DOCUMENT_TYPE = ...
    def __init__(self) -> None:
        ...
    
    @property
    def arguments(self):
        """ Returns a list of browser process arguments """
        ...
    
    def add_argument(self, argument):
        """ Add argument to be used for the browser process """
        ...
    
    @property
    def options(self):
        """ Returns a dictionary of browser options """
        ...
    
    @property
    def capabilities(self):
        ...
    
    def set_capability(self, name, value):
        """Sets a capability."""
        ...
    
    @property
    def browser_attach_timeout(self):
        """ Returns the options Browser Attach Timeout in milliseconds """
        ...
    
    @browser_attach_timeout.setter
    def browser_attach_timeout(self, value):
        """
        Sets the options Browser Attach Timeout

        :Args:
         - value: Timeout in milliseconds

        """
        ...
    
    @property
    def element_scroll_behavior(self):
        """ Returns the options Element Scroll Behavior in milliseconds """
        ...
    
    @element_scroll_behavior.setter
    def element_scroll_behavior(self, value):
        """
        Sets the options Element Scroll Behavior

        :Args:
         - value: 0 - Top, 1 - Bottom

        """
        ...
    
    @property
    def ensure_clean_session(self):
        """ Returns the options Ensure Clean Session value """
        ...
    
    @ensure_clean_session.setter
    def ensure_clean_session(self, value):
        """
        Sets the options Ensure Clean Session value

        :Args:
         - value: boolean value

        """
        ...
    
    @property
    def file_upload_dialog_timeout(self):
        """ Returns the options File Upload Dialog Timeout in milliseconds """
        ...
    
    @file_upload_dialog_timeout.setter
    def file_upload_dialog_timeout(self, value):
        """
        Sets the options File Upload Dialog Timeout value

        :Args:
         - value: Timeout in milliseconds

        """
        ...
    
    @property
    def force_create_process_api(self):
        """ Returns the options Force Create Process Api value """
        ...
    
    @force_create_process_api.setter
    def force_create_process_api(self, value):
        """
        Sets the options Force Create Process Api value

        :Args:
         - value: boolean value

        """
        ...
    
    @property
    def force_shell_windows_api(self):
        """ Returns the options Force Shell Windows Api value """
        ...
    
    @force_shell_windows_api.setter
    def force_shell_windows_api(self, value):
        """
        Sets the options Force Shell Windows Api value

        :Args:
         - value: boolean value

        """
        ...
    
    @property
    def full_page_screenshot(self):
        """ Returns the options Full Page Screenshot value """
        ...
    
    @full_page_screenshot.setter
    def full_page_screenshot(self, value):
        """
        Sets the options Full Page Screenshot value

        :Args:
         - value: boolean value

        """
        ...
    
    @property
    def ignore_protected_mode_settings(self):
        """ Returns the options Ignore Protected Mode Settings value """
        ...
    
    @ignore_protected_mode_settings.setter
    def ignore_protected_mode_settings(self, value):
        """
        Sets the options Ignore Protected Mode Settings value

        :Args:
         - value: boolean value

        """
        ...
    
    @property
    def ignore_zoom_level(self):
        """ Returns the options Ignore Zoom Level value """
        ...
    
    @ignore_zoom_level.setter
    def ignore_zoom_level(self, value):
        """
        Sets the options Ignore Zoom Level value

        :Args:
         - value: boolean value

        """
        ...
    
    @property
    def initial_browser_url(self):
        """ Returns the options Initial Browser Url value """
        ...
    
    @initial_browser_url.setter
    def initial_browser_url(self, value):
        """
        Sets the options Initial Browser Url value

        :Args:
         - value: URL string

        """
        ...
    
    @property
    def native_events(self):
        """ Returns the options Native Events value """
        ...
    
    @native_events.setter
    def native_events(self, value):
        """
        Sets the options Native Events value

        :Args:
         - value: boolean value

        """
        ...
    
    @property
    def persistent_hover(self):
        """ Returns the options Persistent Hover value """
        ...
    
    @persistent_hover.setter
    def persistent_hover(self, value):
        """
        Sets the options Persistent Hover value

        :Args:
         - value: boolean value

        """
        ...
    
    @property
    def require_window_focus(self):
        """ Returns the options Require Window Focus value """
        ...
    
    @require_window_focus.setter
    def require_window_focus(self, value):
        """
        Sets the options Require Window Focus value

        :Args:
         - value: boolean value

        """
        ...
    
    @property
    def use_per_process_proxy(self):
        """ Returns the options User Per Process Proxy value """
        ...
    
    @use_per_process_proxy.setter
    def use_per_process_proxy(self, value):
        """
        Sets the options User Per Process Proxy value

        :Args:
         - value: boolean value

        """
        ...
    
    @property
    def validate_cookie_document_type(self):
        """ Returns the options Validate Cookie Document Type value """
        ...
    
    @validate_cookie_document_type.setter
    def validate_cookie_document_type(self, value):
        """
        Sets the options Validate Cookie Document Type value

        :Args:
         - value: boolean value

        """
        ...
    
    @property
    def additional_options(self):
        """ Returns the additional options """
        ...
    
    def add_additional_option(self, name, value):
        """
        Adds an additional option not yet added as a safe option for IE

        :Args:
         - name: name of the option to add
         - value: value of the option to add

        """
        ...
    
    def to_capabilities(self):
        """ Marshals the IE options to a the correct object """
        ...
    



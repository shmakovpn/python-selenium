"""
This type stub file was generated by pyright.
"""

from selenium.webdriver.chrome.webdriver import WebDriver as ChromiumDriver

class OperaDriver(ChromiumDriver):
    """Controls the new OperaDriver and allows you
    to drive the Opera browser based on Chromium."""
    def __init__(self, executable_path=..., port=..., options=..., service_args=..., desired_capabilities=..., service_log_path=..., opera_options=..., keep_alive=...) -> None:
        """
        Creates a new instance of the operadriver.

        Starts the service and then creates new instance of operadriver.

        :Args:
         - executable_path - path to the executable. If the default is used
                             it assumes the executable is in the $PATH
         - port - port you would like the service to run, if left as 0,
                  a free port will be found.
         - options: this takes an instance of OperaOptions
         - service_args - List of args to pass to the driver service
         - desired_capabilities: Dictionary object with non-browser specific
         - service_log_path - Where to log information from the driver.
         - opera_options - Deprecated argument for options
           capabilities only, such as "proxy" or "loggingPref".
        """
        ...
    
    def create_options(self):
        ...
    


class WebDriver(OperaDriver):
    class ServiceType:
        CHROMIUM = ...
    
    
    def __init__(self, desired_capabilities=..., executable_path=..., port=..., service_log_path=..., service_args=..., options=...) -> None:
        ...
    


